#!/usr/bin/php
<?php

# Unifi Plugin:: Connected users, in detail
#
# Required config:
#
#  [unifi_*]
#  env.unifi_user Controller_Username
#  env.unifi_pass Controller_Password
#  env.unifi_host https://unifi.fqdn.com:8443
#  env.unifi_site Site_Name (often "default" for home use)
#  env.unifi_ver 5.8.28 (Controller software version)
#  env.unifi_ssl false (true == Fail on bad SSL certificate)
#
#  env.unifi_userdetail_graphorder order of graphs, optional
#
# Required pre-requisite:
#
#  https://github.com/Art-of-WiFi/UniFi-API-client
#
# I put in in my PHP search path, under unifi (on ubuntu, that'd be /usr/share/php/unifi/Client.php)
#
# I'm not positive how that package is versioned - I downloaded 9-17-2018 (SHA:2c03587)


require_once('unifi/Client.php');

function make_safe($name) {
	return strtolower(preg_replace("/[^a-zA-Z0-9]+/", "_", $name));
}


$unifi_connection = new UniFi_API\Client(
	$_ENV['unifi_user'],
	$_ENV['unifi_pass'],
	$_ENV['unifi_host'],
	$_ENV['unifi_site'],
	$_ENV['unifi_ver'],
	$_ENV['unifi_ssl']
);

$login            = $unifi_connection->login();

$networks = [];

$results = $unifi_connection->list_wlanconf();

$networks['wired']['cnt'] = 0;
$networks['wired']['name'] = "Wired Connection";
$networks['guest']['cnt'] = 0;
$networks['guest']['name'] = "Total Guests";
$networks['user']['cnt'] = 0;
$networks['user']['name'] = "Total Users";
$networks['wifi']['cnt'] = 0;
$networks['wifi']['name'] = "Wireless Connection";

foreach ($results as $net) {
	$networks[make_safe($net->name)] = Array('cnt' => 0, 'name' => $net->name);
}


if(isset($argv[1])) {
	if($argv[1] == "config") {
	    echo "graph_title Client Detail Connected\n";
    	echo "graph_vlabel clients\n";
		echo "graph_catergory unifi\n";
		echo "graph_info Detailed clients connected to device - wireless and wired\n";
        if ( isset($_ENV['unifi_userdetail_graphorder']) ) {
            echo "graph_order " . $_ENV['unifi_userdetail_graphorder'] . "\n";
        }
		foreach ( $networks as $key => $net ) {
			echo $key . ".label " . $net['name'] . "\n";
		}
	}
} else {
	$results2          = $unifi_connection->list_clients(); // returns a PHP array containing alarm objects
	foreach ( $results2 as $clint ) {
		if ( $clint->is_wired ) {
			$networks['wired']['cnt']++;
			$networks['user']['cnt']++;
		} else {
			$networks['wifi']['cnt']++;
			if ( $clint->is_guest ) {
				$networks['guest']['cnt']++;
			} else {
				$networks['user']['cnt']++;
			}
			$networks[make_safe($clint->essid)]['cnt']++;
		}
	}
	foreach ( $networks as $key => $net ) {
		echo $key . ".value " . $net['cnt'] . "\n";
		
	}
}

?>
