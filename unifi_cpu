#!/usr/bin/php
<?php

# Unifi Plugin:: CPU Usage
#
# Required config:
#
#  [unifi_*]
#  env.unifi_user Controller_Username
#  env.unifi_pass Controller_Password
#  env.unifi_host https://unifi.fqdn.com:8443
#  env.unifi_site Site_Name (often "default" for home use)
#  env.unifi_ver 5.8.28 (Controller software version)
#  env.unifi_ssl false (true == Fail on bad SSL certificate)
#
# Required pre-requisite:
#
#  https://github.com/Art-of-WiFi/UniFi-API-client
#
# I put in in my PHP search path, under unifi (on ubuntu, that'd be /usr/share/php/unifi/Client.php)
#
# I'm not positive how that package is versioned - I downloaded 9-17-2018 (SHA:2c03587)


require_once('unifi/Client.php');

function make_safe($name) {
	return strtolower(preg_replace("/[^a-zA-Z0-9]+/", "_", $name));
}


$unifi_connection = new UniFi_API\Client(
    $_ENV['unifi_user'],
    $_ENV['unifi_pass'],
    $_ENV['unifi_host'],
    $_ENV['unifi_site'],
    $_ENV['unifi_ver'],
    $_ENV['unifi_ssl']
);

$login            = $unifi_connection->login();
$results          = $unifi_connection->list_devices(); // returns a PHP array containing alarm objects

if(isset($argv[1])) {
	if($argv[1] == "config") {
	    echo "graph_title CPU Usage\n";
    	echo "graph_vlabel %\n";
		echo "graph_category unifi\n";
		echo "graph_args --base 1000 -r --lower-limit 0 --upper-limit 100\n";
		echo "graph_info CPU Usage on unifi Devices\n";
		foreach ( $results as $device ) {
			echo make_safe($device->name) . ".label " . $device->name . "\n";
		}
	}
} else {
	foreach ( $results as $device ) {
		echo make_safe($device->name) . ".value " . $device->{'system-stats'}->cpu . "\n";
		
	}
}

?>
